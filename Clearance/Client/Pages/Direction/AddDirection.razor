@page "/AddDirection"
@page "/EditDirection/{Id:int}"
@inject DirectionService ser
@inject NavigationManager navManager
@inject IJSRuntime js
@attribute [Authorize(Roles = "Admin")]

<AuthorizeView Context="aContext">
    <Authorized>
        <PageTitle>@title</PageTitle>
        <div class="container">
            <div class="row">
                <div class="col-lg-3 col-md-2 col-sm-0">
                </div>
                <div class="col-lg-6 col-md-8 col-sm-12">
                    <div class="card">
                        <div class="card-header">
                            <span class="card-header-text">@title</span>
                        </div>
                        <div class="card-body">
                            <EditForm Model="directionDTO" OnValidSubmit="Save">
                                <DataAnnotationsValidator />
                                <ValidationSummary />
                                <div class="form-group">
                                    <label for="name">اسم الجهة</label>
                                    <InputText id="name" class="form-control mb-2" @bind-Value="directionDTO.Name" placeholder="اسم الجهة"></InputText>

                                    <div class="form-group d-flex justify-content-center">
                                        <button class="btn btn-submit mx-2" type="submit">حفظ</button>
                                        <button class="btn btn-cancel" @onclick="Cancel">إلغاء الأمر</button>
                                    </div>
                                </div>

                            </EditForm>
                        </div>
                    </div>
                </div>

                <div class="col-lg-3 col-md-2 col-sm-0">
                </div>
            </div>
        </div>

    </Authorized>
    <NotAuthorized>
        <div class="alert alert-danger" role="alert">
            you are not authoriazed
        </div>
    </NotAuthorized>
</AuthorizeView>


@code {
    [Parameter]
    public int Id { get; set; }
    private DirectionDTO? directionDTO = new();
    protected string title = "";



    protected override async Task OnParametersSetAsync()
    {
        if (Id > 0)
        {
            directionDTO = await ser.GetById(Id);
            title = "تعديل جهة";
        }
        else
        {
            title = "إضافة جهة";
        }
    }

    async void Save()
    {
        bool result = false;

        if (Id > 0)
        {
            result = await ser.Update(directionDTO, Id);
        }
        else
        {
            result = await ser.Insert(directionDTO);
        }

        if (result)
        {
            navManager.NavigateTo("/Directions");
        }
        else
        {
            await js.InvokeVoidAsync("alert", "حدث خطأ عند الحفظ");
        }
    }

    void Cancel()
    {
        navManager.NavigateTo("/Directions");
    }

}
