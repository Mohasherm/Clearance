@page "/AddDepartmentDirection/{depId:int}"
@inject DirectionService dSer
@inject DepartmentService depSer
@inject DepartmentDirectionService ddSer
@inject NavigationManager navManager
@inject IJSRuntime js
@attribute [Authorize(Roles = "Admin")]

<AuthorizeView Context="aContext">
    <Authorized>
    <PageTitle>إضافة جهة للقسم</PageTitle>
        <div class="card">
            <div class="card-header">
                <span class="card-header-text">إضافة جهة للقسم</span>
            </div>
            <div class="card-body">
                <EditForm Model="departmentDirectionDTO" OnValidSubmit="Save">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div class="form-group">
                        @if (lst_DirectionDTO != null)
                        {
                            <div class="mb-3">
                                <label for="dir">الجهة</label>

                                <InputSelect class="form-select" id="dir" @bind-Value="departmentDirectionDTO.DirectionId">
                                    <option selected value="">اختر الجهة....</option>
                                    @foreach (var item in lst_DirectionDTO)
                                    {
                                        <option value="@item.Id">@item.Name</option>
                                    }
                                </InputSelect>
                            </div>
                        }


                        <div class="form-group d-flex justify-content-center">
                            <button class="btn btn-success mx-2" type="submit">حفظ</button>
                            <button class="btn btn-outline-dark" @onclick="Cancel">إلغاء الأمر</button>
                        </div>
                    </div>

                </EditForm>
            </div>
        </div>

    </Authorized>
    <NotAuthorized>
        <div class="alert alert-danger" role="alert">
            you are not authoriazed
        </div>
    </NotAuthorized>
</AuthorizeView>



@code {
    [Parameter]
    public int depId { get; set; }
    private List<DirectionDTO>? lst_DirectionDTO = new();
    DepartmentDirectionDTO departmentDirectionDTO = new();
    protected override async Task OnParametersSetAsync()
    {
        if (depId > 0)
        {
            lst_DirectionDTO = await dSer.GetAll();
            departmentDirectionDTO = new();
            departmentDirectionDTO.DepartmentId = depId;
        }
        else
        {
            await js.InvokeVoidAsync("alert", "حدث خطأ");
            navManager.NavigateTo("/Departments");
        }
    }


    async void Save()
    {
        if (depId > 0)
        {
            var result = await ddSer.Insert(departmentDirectionDTO);
            if (result)
            {
                navManager.NavigateTo("/Departments");
            }
            else
            {
                await js.InvokeVoidAsync("alert", "حدث خطأ");
            }
        }
    }

    void Cancel()
    {
        navManager.NavigateTo("/Departments");
    }

}
