@page "/Departments"
@page "/Departments/{colId:int}"
@inject DepartmentService dSer
@inject CollageService cSer
@inject NavigationManager NavigationManager
@inject IJSRuntime js
@attribute [Authorize(Roles = "Admin")]

<AuthorizeView>
    <Authorized>
        <PageTitle>الأقسام</PageTitle>

        <div class="card">
            <div class="card-header">
                <span class="card-header-text">الأقسام</span>
                <button class="btn btn-above" @onclick="AddNew">إضافة قسم للمركز</button>
            </div>

            <select @onchange="Search" class="form-select" value="@collageId">
                <option value="">اختر المركز</option>
                @foreach (var collage in lst_Collage)
                {
                    <option value="@collage.Id">@collage.Name</option>
                }
            </select>

            <div class="card-body">
                @if (lst_Department != null && lst_Department.Count > 0)
                {
                    <table class="table table-bordered table-striped">
                        <thead>
                            <tr>
                                <th><i class="fa pull-right hidden-xs"></i>الأقسام</th>
                                <th><i class="fa pull-right hidden-xs"></i></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var r in lst_Department)
                            {
                                <tr>
                                    <td>
                                        @r.Name
                                    </td>
                                    <td>
                                        <a class="btn btn-info" title="تعديل الجهة" data-toggle="tooltip" @onclick="(() => EditNewDirection(r.Id))"><i class="oi oi-pencil"></i></a>
                                        <a class="btn btn-warning" title="تفاصيل الجهات" data-toggle="tooltip" @onclick="(() => DirectionDetails(r.Id))"><i class="oi oi-menu"></i></a>
                                        <a class="btn btn-danger" title="حذف" data-toggle="tooltip" @onclick="(() => DeleteDepartment(r.Id))"><i class="oi oi-trash"></i></a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <div class="d-flex justify-content-center">
                        <div class="alert alert-info" role="alert">
                            @if (lst_Department is null)
                            {
                                <p class="m-0">
                                    الرجاء اختيار مركز لعرض الأقسام
                                </p>
                            }

                            else @if (lst_Department.Count == 0)
                            {
                                <p class="m-0">
                                    لا يوجد أقسام قم بإضافة قسم
                                </p>
                            }
                        </div>
                    </div>
                }

                @if (collageId != 0)
                {

                    @if (Adding)
                    {
                        <AddDepartment colId="@collageId" RefreshData="refresh"></AddDepartment>
                    }
                    @if (Editing)
                    {
                        <EditDepartment departmentDTO="lst_Department.FirstOrDefault(x =>x.Id == DepartmentId)" depId="DepartmentId" RefreshData="refresh"></EditDepartment>
                    }
                }
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        <div class="alert alert-danger" role="alert">
            ليس لديك صلاحية
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {
    [Parameter]
    public int colId { get; set; }
    private List<CollageDTO>? lst_Collage { get; set; } = new();
    private List<DepartmentDTO>? lst_Department { get; set; }
    int collageId = 0;
    int DepartmentId = 0;
    bool Adding = false;
    bool Editing = false;

   
    protected async override Task OnParametersSetAsync()
    {
        lst_Collage = await cSer.GetAll();
        if (colId > 0)
        {
            Search(new ChangeEventArgs() { Value = colId });
        }
    }

    async void Search(ChangeEventArgs e)
    {
        if (!string.IsNullOrWhiteSpace(e.Value.ToString()))
        {
            collageId = Convert.ToInt32(e.Value.ToString());
            lst_Department = await dSer.GetAll(collageId);
            StateHasChanged();
        }
        else
        {
            lst_Department = null;
            collageId = 0;
            await js.InvokeVoidAsync("alert", "إختر مركز");
        }
    }

    async void AddNew()
    {
        if (collageId > 0)
        {
            Adding = true;
        }
        else
        {
            await js.InvokeVoidAsync("alert", "إختر مركز");
        }
    }

    async void refresh()
    {
        lst_Department = await dSer.GetAll(collageId);
        Adding = false;
        Editing = false;
        StateHasChanged();
    }

    void DirectionDetails(int depId)
    {
        NavigationManager.NavigateTo($"/DepartmentDirectionDetails/{depId}");
    }

    void EditNewDirection(int depId)
    {
        Editing = true;
        DepartmentId = depId;
    }


    async void DeleteDepartment(int Id)
    {
        await dSer.Delete(Id);
        lst_Department = await dSer.GetAll(collageId);
        StateHasChanged();
    }
}