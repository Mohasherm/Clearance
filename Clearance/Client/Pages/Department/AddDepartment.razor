@page "/AddDepartment/{colId:int}"
@inject DepartmentService ser
@inject NavigationManager NavigationManager
@inject IJSRuntime js
@attribute [Authorize(Roles = "Admin")]

<AuthorizeView Context="aContext">
    <Authorized>
        <PageTitle>إضافة قسم</PageTitle>
        <div class="card">
            <div class="card-header">
                <span class="card-header-text">إضافة قسم</span>
            </div>

            <div class="card-body">
                <EditForm Model="departmentDTO" OnValidSubmit="Save">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div class="form-group">
                        <label for="name">اسم القسم</label>
                        <InputText id="name" class="form-control mb-2" @bind-Value="departmentDTO.Name"></InputText>
                        <div class="form-group d-flex justify-content-center mt-2">
                            <button class="btn btn-success mx-2" type="submit">حفظ</button>
                            <button class="btn btn-outline-dark" @onclick="Cancel">رجوع</button>
                        </div>
                    </div>

                </EditForm>
            </div>
        </div>

    </Authorized>
    <NotAuthorized>
        <div class="alert alert-danger" role="alert">
            you are not authoriazed
        </div>
    </NotAuthorized>
</AuthorizeView>


@code {
    [Parameter]
    public int colId { get; set; }
    private DepartmentDTO departmentDTO{ get; set; }

    protected override async Task OnParametersSetAsync()
    {
        if (colId > 0)
        {
            departmentDTO = new();
            departmentDTO.CollageId = colId;
        }

    }

    async void Save()
    {
        if (colId > 0)
        {
            var result = await ser.Insert(departmentDTO);
            if (result)
            {
                NavigationManager.NavigateTo("/Departments");
            }
            else
            {
                await js.InvokeVoidAsync("alert", "حدث خطأ");
            }
        }
    }

    void Cancel()
    {
        NavigationManager.NavigateTo("/Departments");
    }

}
