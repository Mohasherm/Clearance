@page "/login"
@using Clearance.Client.Validation;
@inject AuthenticationHttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime js
<PageTitle>تسجيل الدخول</PageTitle>


<div class="container">
    <div class="row">
        <div class="col-lg-4 col-md-3 col-sm-1">
        </div>
        <div class="col-lg-4 col-md-6 col-sm-10">

            <div class="card p-0 mt-5">
                <div class="card-header">
                    <span class="card-header-text">تسجيل الدخول</span>
                </div>
                <div class="card-body">
                    <EditForm Model="@userLoginDTO" OnValidSubmit="@HandleValidSubmit">
                        <CustomValidation @ref="customValidation" />
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <div class="mb-3">
                            <label for="name">اسم المستخدم</label>
                            <InputText id="Email" class="form-control" @bind-Value="userLoginDTO.Email" placeholder="اسم المستخدم"></InputText>
                        </div>

                        <div class="mb-3">
                            <label for="name">كلمة المرور</label>
                            <input type="password" class="form-control" id="Password" @bind-value="userLoginDTO.Password" placeholder="كلمة المرور" />
                        </div>

                        @if (!loggingIn)
                        {
                            <div class="d-flex justify-content-center">
                                <button class="btn btn-submit" type="submit">تسجيل الدخول</button>
                            </div>

                        }
                        else
                        {
                            <div class="d-flex justify-content-center">
                                <div class="spinner-border text-primary" style="width: 3rem; height: 3rem;" role="status">
                                    <span class="sr-only"></span>
                                </div>
                            </div>
                        }
                    </EditForm>
                </div>
            </div>

            <div class="col-lg-3 col-md-2 col-sm-0">
            </div>

        </div>
    </div>
</div>

@code {
    private UserLoginDTO userLoginDTO = new();
    private CustomValidation? customValidation;
    private bool loggingIn;

    private async Task HandleValidSubmit()
    {
        loggingIn = true;

        var result = await Http.LoginUser(userLoginDTO);

        if (result.Succeeded)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            customValidation?.ClearErrors();
            var errors = new Dictionary<string, List<string>>();
            errors.Add("", new List<string> { result.Message });
            customValidation?.DisplayErrors(errors);
            await js.InvokeVoidAsync("alert", result.Message);
        }

        loggingIn = false;
    }
}