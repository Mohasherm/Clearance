@page "/EditUser/{Id}"
@inject DirectionService ser
@inject AuthenticationHttpClient Http
@inject NavigationManager navManager
@inject IJSRuntime js
@attribute [Authorize(Roles = "Admin")]

<AuthorizeView Context="aContext">
    <Authorized>
        <PageTitle>تعديل موظف</PageTitle>

        <div class="container">
            <div class="row">
                <div class="col-lg-3 col-md-2 col-sm-0">
                </div>
                <div class="col-lg-6 col-md-8 col-sm-12">

                    <div class="card">
                        <div class="card-header">
                            <span class="card-header-text">تعديل موظف</span>
                        </div>
                        <div class="card-body">
                            <EditForm Model="userDTO" OnValidSubmit="Save">
                                <DataAnnotationsValidator />
                                <ValidationSummary />
                                <div class="form-group">
                                    <label for="FirstName">اسم الموظف</label>
                                    <InputText id="FirstName" class="form-control mb-2" @bind-Value="userDTO.FirstName" placeholder="اسم الموظف"></InputText>
                                    <label for="LastName">الكنية</label>
                                    <InputText id="LastName" class="form-control mb-2" @bind-Value="userDTO.LastName" placeholder="الكنية"></InputText>
                                    <label for="Father">اسم الأب</label>
                                    <InputText id="Father" class="form-control mb-2" @bind-Value="userDTO.Father" placeholder="اسم الأب"></InputText>
                                    <label for="Father">اسم المستخدم</label>
                                    <InputText id="UserName" class="form-control mb-2" @bind-Value="userDTO.UserName" placeholder="اسم المستخدم"></InputText>

                                    @if (lst_DirectionDTO != null)
                                    {
                                        <div class="mb-3">
                                            <label for="JobTitle">الجهة</label>
                                            <InputSelect class="form-select" id="JobTitle" @bind-Value="userDTO.Direction_Id">
                                                <option value=""> ... (ليس موظف جهة) ... </option>
                                                @foreach (var item in lst_DirectionDTO)
                                                {
                                                    <option value="@item.Id">@item.Name</option>
                                                }
                                            </InputSelect>
                                        </div>
                                    }
                                    <div class="form-group d-flex justify-content-center">
                                        <button class="btn btn-submit mx-2" type="submit">حفظ</button>
                                        <button class="btn btn-cancel" @onclick="Cancel">إلغاء الأمر</button>
                                    </div>
                                </div>

                            </EditForm>
                        </div>
                    </div>

                </div>
                <div class="col-lg-3 col-md-2 col-sm-0">
                </div>
            </div>

        </div>

    </Authorized>
    <NotAuthorized>
        <div class="alert alert-danger" role="alert">
            you are not authoriazed
        </div>
    </NotAuthorized>
</AuthorizeView>


@code {
    [Parameter]
    public string Id { get; set; } = string.Empty;
    private UserDTO? userDTO = new();
    private List<DirectionDTO>? lst_DirectionDTO = new();

    protected override async Task OnParametersSetAsync()
    {
        if (!string.IsNullOrWhiteSpace(Id))
        {
            lst_DirectionDTO = await ser.GetAll();
            userDTO = await Http.GetUserById(Id);
        }
        else
        {
            await js.InvokeVoidAsync("alert", "");
        }
    }

    async void Save()
    {
        bool result = false;
        if (!string.IsNullOrWhiteSpace(Id))
        {
            result = await Http.Update(userDTO, new Guid(Id));
        }



        if (result)
        {
            navManager.NavigateTo("/Users");
        }
        else
        {
            await js.InvokeVoidAsync("alert", "حدث خطأ عند الحفظ");
        }
    }

    void Cancel()
    {
        navManager.NavigateTo("/Users");
    }

}
