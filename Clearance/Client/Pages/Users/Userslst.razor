@page "/Users"
@inject NavigationManager navigate
@inject AuthenticationHttpClient Http
@inject IJSRuntime js
@attribute [Authorize(Roles = "Admin")]

<AuthorizeView Context="aContext">
    <Authorized>
        <PageTitle>الموظفون</PageTitle>

        <div class="card">
            <div class="card-header">
                <span class="card-header-text">الموظفون</span>
                </div>
            <div class="card-body">
                <div class="row g-3 mb-3 d-flex justify-content-center">
                    <div class="col-lg-3 col-md-8 col-sm-6 ">
                        <input class="form-control" @bind-value="NameFilter" placeholder="ادخل اسم للبحث..."></input>
                    </div>
                    <div class="col-auto">
                        @if (!searching)
                        {
                            <button class="btn btn-above" @onclick="search">&nbsp; بحث <i class="fa fa-search"></i></button>
                        }
                        else
                        {
                            <p>يتم البحث الآن ...</p>
                        }
                    </div>
                    <div class="col-auto">
                    </div>
                </div>
                @if (lst_UserDTO != null && lst_UserDTO.Count > 0)
                {
                    <table class="table table-sm table-bordered table-striped table-hover">
                        <thead class="table-primary">
                            <tr>
                                <th><i class="fa pull-right hidden-xs"></i>الاسم الثلاثي</th>
                                <th><i class="fa pull-right hidden-xs"></i>اسم المستخدم</th>
                                <th><i class="fa pull-right hidden-xs"></i>الجهة التابع لها</th>
                                <th><i class="fa pull-right hidden-xs"></i> </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var r in lst_UserDTO)
                            {
                                <tr>
                                    <td class="col-auto">@r.FullName</td>
                                    <td class="col-auto">@r.UserName</td>
                                    <td class="col-auto">@r.DirectionName</td>
                                    <td class="col-auto">
                                        <a class="btn btn-in-column" title="تعديل" data-toggle="tooltip" href="@($"/EditUser/{r.Id}")"><i class="fas fa-pen fa-sm"></i></a>
                                        <a class="btn btn-danger" title="حذف" data-toggle="tooltip" href="@($"/DeleteUser/{r.Id}")"><i class="far fa-trash-alt fa-sm"></i></a>
                                    </td>
                                </tr>
                            }

                        </tbody>
                    </table>
                }
                else if (lst_UserDTO.Count == 0)
                {
                    <div class="alert alert-primary" role="alert">
                        لا توجد بيانات
                    </div>
                }
                else
                {
                    <div class="d-flex justify-content-center">
                        <div class="spinner-border text-primary" style="width: 3rem; height: 3rem;" role="status">
                            <span class="sr-only"></span>
                        </div>
                    </div>
                }
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        <div class="alert alert-danger" role="alert">
            you are not authoriazed
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {
    List<UserDTO>? lst_UserDTO = new();
    public string NameFilter { get; set; } = string.Empty;
    bool searching = false;
    protected override async Task OnInitializedAsync()
    {
        lst_UserDTO = await Http.GetUsers();
    }

    async Task search()
    {
        searching = true;
        if (string.IsNullOrEmpty(NameFilter))
        {
            lst_UserDTO = await Http.GetUsers();
        }
        else
        {
            lst_UserDTO = await Http.Search(NameFilter);
        }
        searching = false;
    }
}
