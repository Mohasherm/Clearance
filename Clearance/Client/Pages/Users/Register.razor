@page "/register"
@using Clearance.Client.Validation;

@inject AuthenticationHttpClient Http
@inject DirectionService ser
@inject IJSRuntime js
@inject HttpClient http

<AuthorizeView Context="aContext">
    <Authorized>
        <PageTitle>إضافة موظف</PageTitle>

        <div class="panel panel-info">
            <div class="panel-heading d-flex justify-content-between">
                <h5>إضافة موظف</h5>
            </div>
            <div class="panel-body">
                <div class="table-responsive nomargin">

                    @if (!succeeded)
                    {
                        <EditForm Model="@userRegisterDTO" OnValidSubmit="register">
                            <CustomValidation @ref="customValidation"/>
                            <DataAnnotationsValidator />
                            <ValidationSummary />

                            <div class="mb-3">
                                <InputText class="form-control" @bind-Value="userRegisterDTO.FirstName" placeholder="اسم الموظف" />
                            </div>
                            <div class="mb-3">
                                <InputText class="form-control" @bind-Value="userRegisterDTO.LastName" placeholder="الكنية" />
                            </div>
                            <div class="mb-3">
                                <InputText class="form-control" @bind-Value="userRegisterDTO.Father" placeholder="الأب" />
                            </div>

                            <div class="mb-3">
                                <InputText class="form-control" id="Email" @bind-Value="userRegisterDTO.Email" placeholder="إيميل المستخدم" />
                            </div>

                            <div class="mb-3">
                                <input type="password" class="form-control" id="Password" @bind-value="userRegisterDTO.Password" placeholder="كلمة المرور" />
                            </div>

                            <div class="mb-3">
                                <input type="password" class="form-control" id="ConfirmPassword" @bind-value="userRegisterDTO.ConfirmPassword" placeholder="تأكيد كلمة المرور" />
                            </div>


                            @if (lst_DirectionDTO != null)
                            {
                                <div class="mb-3">
                                    <InputSelect class="form-select" id="JobTitle" @bind-Value="userRegisterDTO.Direction_Id">
                                        <option value="">اختر الجهة....</option>
                                        @foreach (var item in lst_DirectionDTO)
                                        {
                                            <option value="@item.Id">@item.Name</option>
                                        }
                                    </InputSelect>
                                </div>
                            }

                            @if (!registering)
                            {
                                <button class="btn mx-2 btn-submit" type="submit">حفظ</button>
                            }
                            else
                            {
                                <div class="d-flex justify-content-center">
                                    <div class="spinner-border text-primary" style="width: 3rem; height: 3rem;" role="status">
                                        <span class="sr-only">Loading...</span>
                                    </div>
                                </div>
                            }
                        </EditForm>
                    }
                    else
                    {
                        <p>
                            تم إضافة موظف جديد بنجاح
                        </p>
                    }
                </div>
            </div>
        </div>

    </Authorized>
    <NotAuthorized>

    </NotAuthorized>
</AuthorizeView>


@code {
    private UserRegisterDTO userRegisterDTO = new();
    private CustomValidation? customValidation;
    private bool registering;
    private bool succeeded;
    private List<DirectionDTO> lst_DirectionDTO = new();

    private long MaxFileSize = long.MaxValue;

    protected override async Task OnInitializedAsync()
    {
        lst_DirectionDTO = await ser.GetAll();
    }

    private async Task register()
    {
        registering = true;

        var result = await Http.RegisterUser(userRegisterDTO);

        if (result.Succeeded)
        {
            succeeded = true;
        }
        else
        {
            customValidation?.ClearErrors();
            var errors = new Dictionary<string, List<string>>();
            errors.Add("", result.Errors.ToList());
            customValidation?.DisplayErrors(errors);
        }

        registering = false;
    }

}