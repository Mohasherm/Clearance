@page "/DeleteUser/{Id}"
@inject AuthenticationHttpClient Http
@inject NavigationManager navManager
@inject IJSRuntime js
@attribute [Authorize(Roles = "Admin")]

<AuthorizeView>
    <Authorized>
        <PageTitle>حذف الموظف</PageTitle>

        @if (userDTO != null)
        {
            <div class="card ">
                <div class="card-header bg-dark text-white">
                    بيانات الموظف
                </div>
                <div class="card-body">
                    <table class="table">
                        <tbody>
                            <tr>
                                <td><strong>اسم الموظف</strong></td>
                                <td>@userDTO.FirstName</td>
                            </tr>
                            <tr>
                                <td><strong>الكنية</strong></td>
                                <td>@userDTO.LastName</td>
                            </tr>
                             <tr>
                                <td><strong>اسم الأب</strong></td>
                                <td>@userDTO.Father</td>
                            </tr>
                            <tr>
                                <td><strong>اسم الجهة</strong></td>
                                <td>@userDTO.DirectionName</td>
                            </tr>
                        </tbody>
                    </table>
                    <div class="form-group d-flex justify-content-center">
                        <button class="btn btn-danger mx-2" @onclick="Delete">حذف</button>
                        <button class="btn btn-outline-dark" @onclick="Cancel">إلغاء الأمر</button>
                    </div>
                </div>
            </div>


        }
        else
        {
            <div class="alert alert-info" role="alert">
                لا توجد بيانات
            </div>
        }
    </Authorized>
    <NotAuthorized>
        <div class="alert alert-danger" role="alert">
            ليس لديك صلاحية
        </div>
    </NotAuthorized>
</AuthorizeView>


@code {
    [Parameter]
    public string Id { get; set; }
    private UserDTO? userDTO= new();

    protected override async Task OnParametersSetAsync()
    {
        if (!string.IsNullOrWhiteSpace(Id))
        {
            userDTO = await Http.GetUserById(Id);
        }
        else
        {
            await js.InvokeVoidAsync("alert", "الموظف غير صالح");
            navManager.NavigateTo("/Users");
        }
    }
    async void Delete()
    {
        if (userDTO != null)
        {
            var result = await Http.Delete(new Guid(Id));
            if (result)
            {
                navManager.NavigateTo("/Users");
            }
            else
            {
                await js.InvokeVoidAsync("alert", "حدث خطأ عند الحذف");
            }
        }
    }
    void Cancel()
    {
        navManager.NavigateTo("/Users");
    }
}